{"version":3,"file":"static/js/419.bdfd2b55.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormContact = styled.form`\ndisplay: flex;\nflex-direction: column;\npadding: 5px;\ncollor: red;\n`;\n\nexport const InputTitle = styled.label`\ndisplay: block;\nfont-weight: bold;\nfont-size: 24px;\nmargin-bottom: 10px;\ncolor: pink;\n`;\nexport const InputText = styled.input`\nfont-size: 20px;\nmin-width: 300px;\nmin-height: 40px;\ncolor: green;\nborder-radius: 7px;\nmargin-bottom: 10px;\n`;\nexport const Button = styled.button`\ndisplay: block;\nmargin-top: 20px;\nmargin-bottom: 10px;\npadding: 0 16px 0 16px;\nheight: 40px;\nborder-radius: 5px;\ncolor: black;\nbackground-color: white;\nfont-size: 20px;\ncursor: pointer;\n:hover {\n  color: #ffff;\n  background-color: #606060;\n  cursor: pointer; }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { InputTitle, InputText, Button, FormContact} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/contactsSlice';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = event.target.elements;\n    // console.log(name, number);\n    const toLowerCaseName = name.value.toLowerCase().trim();\n\n    const searchName = contacts.find(\n      contact => contact.name.toLowerCase().trim() === toLowerCaseName\n    );\n\n    if (searchName) {\n      return alert(`${toLowerCaseName} is already in contacts`);\n    }\n    // console.log(name.value, number.value);\n    dispatch(addContact({ name: name.value, number: number.value }));\n    event.target.reset();\n  };\n    return (\n        <FormContact onSubmit={handleSubmit}>\n            <InputTitle>Name </InputTitle>\n            <InputText\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <InputTitle>Number </InputTitle>\n          <InputText\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          />\n            <Button type=\"submit\">Add contact</Button>\n        </FormContact>\n    );\n};","import styled from 'styled-components';\n\nexport const ListContact = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n  margin-left: 20px;\n  max-width: 500px;\n  padding: 5px;\n`;\nexport const ButtonDelete = styled.button`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  padding: 0 16px 0 16px;\n  background-color: #606060;\n  border: none;\n  border-radius: 5px;\n  font-family: inherit;\n  font-size: 20px;\n  height: 40px;\n  max-width: 100px;\n  color: white;\n  cursor: pointer;\n`;\nexport const ContactItem = styled.li`\n  display: flex;\n  font-size: 20px;\n  align-items: center;\n  gap: 20px;\n  justify-content: space-around; \n  color: #800080;\n`;\nexport const WrapperIcon = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { IconContext } from 'react-icons';\nimport { MdPermContactCalendar } from 'react-icons/md';\nimport {\n  ButtonDelete,\n  ContactItem,\n  ListContact,\n  WrapperIcon,\n} from './ContactList.styled';\nimport { selectContacts } from '../../redux/contacts/contactsSlice';\nimport { selectFilters } from 'redux/contacts/filtersSlice';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n  const contacts = useSelector(selectContacts);\n  // console.log(contacts);\n\n  const getVizibleContact = () => {\n    return filter\n      ? contacts.filter(contact => contact.name.toLowerCase().includes(filter))\n      : contacts;\n  };\n  const vizibleContact = getVizibleContact();\n  // console.log(vizibleContact);\n\n  return (\n    <ListContact>\n      {vizibleContact.map(contact => (\n        <ContactItem key={contact.id}>\n          <WrapperIcon>\n            <IconContext.Provider value={{ color: '#e6b0aa', size: 30 }}>\n              <MdPermContactCalendar />\n            </IconContext.Provider>\n            {contact.name}: {contact.number}\n          </WrapperIcon>\n\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </ButtonDelete>\n        </ContactItem>\n      ))}\n    </ListContact>\n  );\n};","import styled from \"styled-components\";\n\nexport const FilterTitle = styled.label`\nmargin-bottom: 10px;\ncolor: #9932CC;\nfont-weight: bold;\nfont-size: 30px;\ndisplay: flex;\npadding-left: auto;\nflex-direction: column;\njustify-content: center;\ngap: 20px;\n`;\n\nexport const FilterFind = styled.label`\nmargin-bottom: 10px;\ncolor: #9932CC;\nfont-weight: bold;\nfont-size: 24px;\ndisplay: flex;\npadding-left: 10px;\n// flex-direction: column;\n// justify-content: center;\ngap: 20px;\n`;\nexport const FilterInput = styled.input`\nfont-size: 20px;\nmin-width: 300px;\ndisplay: flex;\npadding-left: 0;\nmin-height: 40px;\nborder-radius: 7px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterTitle, FilterFind, FilterInput } from './Filter.styled';\nimport { setFilterContact, selectFilters } from 'redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilters);\n    const dispatch = useDispatch();\n\n    const changeFilter = event => {\n        const value = event.target.value.toLowerCase().trim();\n        dispatch(setFilterContact(value));\n    };\n    return (\n        <FilterTitle>\n            <FilterFind>\n                Find contacts by name\n                </FilterFind>\n            <FilterInput type=\"text\" value={filter} onChange={changeFilter}/>\n        </FilterTitle>\n    );\n};","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { selectIsLoading } from 'redux/contacts/contactsSlice';\nimport styled from 'styled-components';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const Title = styled.h1`\n    font-weight: 500;\n    font-size: 24px;\n    text-align: center;\n    color: #e57373;\n    padding: 20px 0;\n  `;\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && <b>Request in progress...</b>}\n      <ContactList />\n    </>\n  );\n}"],"names":["FormContact","styled","InputTitle","InputText","Button","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","event","preventDefault","target","elements","name","number","toLowerCaseName","value","toLowerCase","trim","find","contact","alert","addContact","reset","type","pattern","title","required","ListContact","ButtonDelete","ContactItem","WrapperIcon","ContactList","filter","selectFilters","vizibleContact","includes","map","color","size","onClick","deleteContact","id","FilterTitle","FilterFind","FilterInput","Filter","onChange","setFilterContact","Contacts","isLoading","selectIsLoading","useEffect","fetchContacts","Title","Helmet"],"sourceRoot":""}